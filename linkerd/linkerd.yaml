---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["split.smi-spec.io"]
  resources: ["trafficsplits"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRU093Ukd4amdBVTB3RjlpeWV5alhtakFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNVEE1TVRZeE5qSXlNekphRncweU1qQTVNVFl4TmpJeU16SmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdFAzbjI1UndKUi9BYjRFWkF6QmJHQnlORzRjQzY0empGN2JBbzAvR1NqeDQxd1laOWpGRwpJckZIcUZ2eWRXUTBacmtYWlBlVkwzWXNjUW9JeHEwdUVNMG91ODhhcDE5QW1VdVRZZEw3Ym9BdnBsQVIxdTdTCnNsZ3JIaERwVGFKUUMzdDZTY2tmaDdHSDB5aU44SFp0QXNLNmdzdk5CR0UxYTJsNHhnNkg1WlVnSG1QSlg4eFEKbHJCaVdUU0haSEhZNjgrWWRzRHR3UTQxOG15UnpueGNtU1d4NzBlVjhMdmhQZkorOHRYOUp3WTQzRGZRVG1PTwo0YlppNDdlV3pjejdlMW5JMUxEL1diNEVNbHdpUDljNGJ6d1pHMEFlL0F4SU4xUEkxRzd0bjB0YVN4Ri8rK0xQCmtaVjNjSEJQV2xhLzBqd0ZiS3JhMndXdmZOTCtIazF3NXdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUdyRFQxT29QbnJRY0NYeTZDMEJzUFVtVk1TbUZoZjRybjdERExUZUVTakwKQXJnMjJ0TnVKOE9KcnkxOVg4T1dULzkvOFV6VGp0U1lDY2pzcU5MTnplanhJeCtldFhQUmtybzI2WitaTEtIbApZN2NQODJLb1NQTTdZVUJSMFM4bmo3NGtTN0NoTGpSVmlzTTRHSW9ZODI1NGVwb0dwbG5raWp1amQwNnVpYzNECmZEVnJuQ1JveXI0dnJBaXlKS2xFQ0dPckNFTlpPNUhzdW1SYmw0VC9zdnk1dGVRN0hxMVBBb1UxQmdxbDZ2alUKTGpFYkt6WWw1a05DNkp5a1hlaVZQRjdKeVMvWjN3VWFxeDFndDV4UlRyTlcwenQ5dk9xTCtTeWVYMHJqZXVKQwo3WkJQRFBSSjVyUmdSbUpnMVoxT25ZR3dPSVpSUzBKZ1FXaSs4RFlCM2xzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFAzbjI1UndKUi9BYjRFWkF6QmJHQnlORzRjQzY0empGN2JBbzAvR1NqeDQxd1laCjlqRkdJckZIcUZ2eWRXUTBacmtYWlBlVkwzWXNjUW9JeHEwdUVNMG91ODhhcDE5QW1VdVRZZEw3Ym9BdnBsQVIKMXU3U3NsZ3JIaERwVGFKUUMzdDZTY2tmaDdHSDB5aU44SFp0QXNLNmdzdk5CR0UxYTJsNHhnNkg1WlVnSG1QSgpYOHhRbHJCaVdUU0haSEhZNjgrWWRzRHR3UTQxOG15UnpueGNtU1d4NzBlVjhMdmhQZkorOHRYOUp3WTQzRGZRClRtT080YlppNDdlV3pjejdlMW5JMUxEL1diNEVNbHdpUDljNGJ6d1pHMEFlL0F4SU4xUEkxRzd0bjB0YVN4Ri8KKytMUGtaVjNjSEJQV2xhLzBqd0ZiS3JhMndXdmZOTCtIazF3NXdJREFRQUJBb0lCQURzQzdpM3gzLzY2czR1bgprL2d1TkFWUWlkR0gyN1BoWThtL2xGK3JDd1A1WTR6NE9FN0ZFaEVOckVlQWN6VkRUcktQZHNrODBDK0JZRXdhCjhYR1YxWWMwM1NzZkE1bSt2TmsrZ3ZkS1N5QmtPeVVHeGtwRjQveXlNcHpDOXM2Uk5YZ0k4bjVNVFRONDlzZ3EKV04wbVA3Uyt1UUVjWWVRanJiOHZ6R2tISTlmK2tyUVNXakpSSTBOVDdsUWgwSExNQzk3eHQ3dWtSaCtYcmFITgoxaVdxVDVIeXgzWFFhTng1YmtGcXZhZkpwSUgwRGhaM2ZYbEQ2RmJxZTZleVQ2U1F0aWozTGRrSzBnT1BEbFZiCk9FTlVUbXNmMlZ4TldkaktINDBrSEFKZ1lHb2I0d2VSZmRCQnlxNzFIRXUvd2RFQTFpYVlRaW5La0t1YllmUVkKTTk2UWlBRUNnWUVBNUlsamxjZHRtUXV6L0ZhRDB6Y2U5aGtJSm5kQ2c1bkEyRlFKNWJWblZmNUJDaS9zYk4zQQp4N1BtcnNEVk9wTWU5SjNncVdGWlVkeXE4WmE1cFZ5aWg0WmMrK1QvcnZ1djh3TktwVUhrVWhHbytNMklSbjM1CjRyOXlvSGo3RUJLQUNaVTNiRXp2K3B6MC9NaVdoOWNkVDIzOGdwTHpHclVUMnNDUWpYRTYwb0VDZ1lFQXlyM2QKbjEweHN2d1hnS2VLYURhUkd0cytCVDhXSFc2S2M2VW1HV29RcG13WDBiaGNiQnRLdHJDUVIvaG9zeHFPelVWRgpMcFdkRFhKM0MzendQczFFbGZZclpTSmk0SERUM2ZNK0xpRXFMbG4wRVJ4SEo2NmVDWS85Q05lMXhkaS9SZTgxCldodWtBejFIZnlacGt5d3FmMW1nNFR1RW90ZCsyTnpxcGJGVlAyY0NnWUVBbmRsUFVWcW5sbmdBM3grYWViNnUKd2VoVU9zMVF3YmptL0FRL3VjdHNEbmRJMFJKOHlFejZKSFZidGdRMnd2aHUveUkwMUlrS3VvSWlDQy9GRmpRLwpoa0FGNVc0c005NWZqd2dNL012Z09kYzgwR3lWM2FxUmVFNG5qRE5EcGJ4QmQxejdKUENYS0pCVW5teWxuRG0yCll2Qmk0b1ZCS0ljOXFYQXI1NlgzclFFQ2dZQjFqVGJtQXhRZzhqZnlXYkpQa0d2OEJXamxnOW1md1FzMzJHYkoKejR6TjRkakJ1Y0trMEFJM0FSTDNGOW9sRnQzN3VSRk8zR0xPZkRMNER6NEJPK1ZyaWV0SlhYRzFMdFk1VjZNUwovaG5GL0ZRZVk2WUNKU1h1NTNUUVhyby9kOWdYaFlZS3RBSVorcnJzeDJucGNtOUZuY05CTk5CSDF1anVkdEQ2CnQySjFPd0tCZ0daZWpPY0xUd0hCVDJjV2JyZGIzbTRnNkRwZCt3QXZWeGpLUHEyN2REVEZ1VmlDTGdxY002YmwKbFk0cmF1d2hnYmZGVE5hLzlYQy95cXNFcE51dkpQNGQveHBYMnVzdm9UY1BCdzdCRjVBaHVrUkVpYTlzZ2gzQgpXZVlkYjhlMUFRTnR1ZCtGdGtaaVVUMWcyYUE2MWFCRmhYYUN4U3U0UW96bUg1b05zRDc4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRU093Ukd4amdBVTB3RjlpeWV5alhtakFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNVEE1TVRZeE5qSXlNekphRncweU1qQTVNVFl4TmpJeU16SmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdFAzbjI1UndKUi9BYjRFWkF6QmJHQnlORzRjQzY0empGN2JBbzAvR1NqeDQxd1laOWpGRwpJckZIcUZ2eWRXUTBacmtYWlBlVkwzWXNjUW9JeHEwdUVNMG91ODhhcDE5QW1VdVRZZEw3Ym9BdnBsQVIxdTdTCnNsZ3JIaERwVGFKUUMzdDZTY2tmaDdHSDB5aU44SFp0QXNLNmdzdk5CR0UxYTJsNHhnNkg1WlVnSG1QSlg4eFEKbHJCaVdUU0haSEhZNjgrWWRzRHR3UTQxOG15UnpueGNtU1d4NzBlVjhMdmhQZkorOHRYOUp3WTQzRGZRVG1PTwo0YlppNDdlV3pjejdlMW5JMUxEL1diNEVNbHdpUDljNGJ6d1pHMEFlL0F4SU4xUEkxRzd0bjB0YVN4Ri8rK0xQCmtaVjNjSEJQV2xhLzBqd0ZiS3JhMndXdmZOTCtIazF3NXdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUdyRFQxT29QbnJRY0NYeTZDMEJzUFVtVk1TbUZoZjRybjdERExUZUVTakwKQXJnMjJ0TnVKOE9KcnkxOVg4T1dULzkvOFV6VGp0U1lDY2pzcU5MTnplanhJeCtldFhQUmtybzI2WitaTEtIbApZN2NQODJLb1NQTTdZVUJSMFM4bmo3NGtTN0NoTGpSVmlzTTRHSW9ZODI1NGVwb0dwbG5raWp1amQwNnVpYzNECmZEVnJuQ1JveXI0dnJBaXlKS2xFQ0dPckNFTlpPNUhzdW1SYmw0VC9zdnk1dGVRN0hxMVBBb1UxQmdxbDZ2alUKTGpFYkt6WWw1a05DNkp5a1hlaVZQRjdKeVMvWjN3VWFxeDFndDV4UlRyTlcwenQ5dk9xTCtTeWVYMHJqZXVKQwo3WkJQRFBSSjVyUmdSbUpnMVoxT25ZR3dPSVpSUzBKZ1FXaSs4RFlCM2xzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" , "UPDATE" ]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWEJuYkpxdDNkTEhabWs3YUVnU2YwREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpFd09URTJNVFl5TWpNeVdoY05Nakl3T1RFMk1UWXlNak15V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNvKy9rWHlpUzF4RXcxeEVFYjU4ckFYemtMVEpCYjg2RHB3OE1EYWxaUApXUmw3SnZYcGFIUGNYaW5KMFBVTEtqeWRxLzhpQWxHdk1yUlhvd01Zd1dLSExzYnd0UEpvT2dxd3ZkdmE5NjR5ClJlUmRYNTVVNTFXdThKT29MUzFPNFA0V1lzcDJEYmpqaFk3TWFhYVpncUJ2NDIwazRSUXhkUGZQNDNROE9Idm8KRnY2eW5vQ2NZcDBweDlhWWNDYXE4MFJKVTllWnYzbVV4RHFMWWUzT0dZeDVqWlJZM0djSHBqSE8vUTZkRC9xawp2RXhyMVpSSW1DMXJha1l4VHJnb09zdU42Yk5yYTRpWml5aG56MEhuS3hJMmtVVG9IOVZieFd4emNtNDZ3YlQ1CjhFeFJCcXphUStpRUZ1SWN3WExVWkdmUXN6VjJCNkhMZW4zMmhSaFpVcXpEQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMnhpeHFHMEVxUTd4b0R6MEh5SE9xV3g5M0UKKytSdEhRdFNEblFhdDN4YVhtMmplZ1hZUTNwZzgyL1dwcnNpU1pzTlBsNkJNTmhUTHBXT1pWTWlXUjBwZHhmVgp6blBVcFVLMmlvdDBxY1JzcXR5RVM0bUNTN3l6UzlTY1R4UVU0dCsraTVHa2twT01sRGRMd3ArMXF6VkRTOVViCldlanZqQzNEQ1ppOERCQ3lTdUd6SXVGSEErRUlrbEMvdW8zaDV5WURMdXJYMlFiNHNTcVNRSFNWcGZRT1YxbE4KbzVsU3BIY3ZHMENVYlhEay9FRmpxSDF3MHB6TXZUYkpyUUR3d0Ywa2sxUTM0MWM0SCt1bnlkQ0xyUHZVRW5FegpXZndrSTYwSDBrQlJuT0dRU1M2UFNNaEh1dEJxYmZ5Y0g4THQvQ1hiQmplNU1wb1dsWEFyTWU4YzFRMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVB2NUY4b2t0Y1JNTmNSQkcrZkt3Rjg1QzB5UVcvT2c2Y1BEQTJwV1Qxa1pleWIxCjZXaHozRjRweWREMUN5bzhuYXYvSWdKUnJ6SzBWNk1ER01GaWh5N0c4TFR5YURvS3NMM2IydmV1TWtYa1hWK2UKVk9kVnJ2Q1RxQzB0VHVEK0ZtTEtkZzI0NDRXT3pHbW1tWUtnYitOdEpPRVVNWFQzeitOMFBEaDc2QmIrc3A2QQpuR0tkS2NmV21IQW1xdk5FU1ZQWG1iOTVsTVE2aTJIdHpobU1lWTJVV054bkI2WXh6djBPblEvNnBMeE1hOVdVClNKZ3RhMnBHTVU2NEtEckxqZW16YTJ1SW1Zc29aODlCNXlzU05wRkU2Qi9WVzhWc2MzSnVPc0cwK2ZCTVVRYXMKMmtQb2hCYmlITUZ5MUdSbjBMTTFkZ2VoeTNwOTlvVVlXVktzd3dJREFRQUJBb0lCQVFDbldzeXFBOWR4Y05QdApGODFIbnJyTTVFRnhjRVV6MjhlTVhBVWh0OGw4MGdnTFVGMlE2SkorTjM5NVVRbXVJZ2xnT2Z2MktZZk9WQkFKCkR2YzlLQ0MxTXQxeGZETHFpRGtZS3grMjd6N0VxVFZ1U0FsZG1ySGdESUNmdVFZN0xWWld3MFl4dm90U1FXNVkKQVhZdWFCRU9YcFUwUmZraXRlM0xKRDkwZUpnMkZCc2RBSmh2Nnh0Ym91RWdlUE5IOHZMcmRFZFdocmJnSVd6SQpIRmFwN29GTExBVXBWQVFaejNPUjJZR211c1NsK25JSlRKcHFPQ0lmSjhKZTNIS3FWRlpPblVoOXA2WXJsZUpSCjJ0UzlJTzdmMmpMMHFseGhVQ1I5dnUzczFhNVc3ZEdlZFJDYThmVWx1bm9pb0x2NURCY0ZWb1kyUUp5cU52REcKWGNDNENqYVJBb0dCQU1NS1J2SUg3SnJGS2JZVkxBZmRTNkk1SERiWnpSQlh1TEt3UEhOQkZXWklXYkxrdlYwTQo1TXAwN0tNcXFHYTlVK2Y2UkxzcEZtQk5wYlZKOFZSOG4wM2p6VXRRSlhLVUlZSkFUZCs4VklVQ0dENHpGb0ZUCjArUWc2ZlJrYmJkZS9Fd2VweXF1U3NuS0JuTmZjbVFYREdtT0pBdjlLb0tiNWUrMXVCV2JEZTVMQW9HQkFOM00KNCs4bCtTRlBFOHZKRXh3L2RPZ3BtUHp2WFR3a0NwbW1lSVYycE5ZSTgxb1JFTFEzaWF1WSttcTJXNmNpRHR6QQpYRzB5cW5vSXNiMzYyWmxOQlZqeXFLS2tubnNUUXJwUWRTeDZpMWZUSFBvQzRPRkpjWFRVbWFaL3Bicm44SnBGCjN1SVJWT1BWTnJwRVhoWXU2Tm8vWGI4ZThxdGhUNGNlNmZVQm5kQnBBb0dCQUo5Qm9BWjI4L3E0YlVPeGEvK0wKOGZzbldPTnMycVd5aXl6VS9MYzdlSWJKSXYwUkM1S1VPYWthNmpLZFhWNXV6N21Hd0dKMnZUK3JoMWhOWlZJUQpaRi9NVjlCY1JBZVg3dmlWRzBGS1hWVXlEYXVVT1pjbVpNbE5HdHVrdVhYV2lIcDdPUkovdUsrbVY3Z1RRcXQ1CnFuZnlTWHJFb05aL0I3VEJFK3dJYk1xYkFvR0FiVFB5eVkwdHN1dW5PSCtBakRqbUMyUm5zYWo4ZzU3UEpVVmsKTTNudHdIL1pxTytjQk04UFZsQlVndlBUL2w3emFGYkJhdlkySHkxbXJiM3pJdHBjRnFZcXh5RTc4aWJTaEw4VwpZZGJZQWw2cjlxQXlMbG1scGJzREI0bnpoQ21zT1pqTEd3MGplYVZCYzhZemVNS1IzTnEwQW1SdllGZmgrd29LCmNKbmlKSGtDZ1lBQzlTaGJBK0wwR09nUThjWkhrVTNSdjlxdXRNMG51T3ErK2ViZjBYc04xQVhRcFh0OFdwMEoKVkFrQ1ArclF6SFhwQ0VwM2FLQks1V2tJQ25ONGdhZEJ1V2cyMS83dFBQUnBCUWYyd1lGdWZRU2l6MUZweWlYKwpIbGMreStiM2d5ZnhsdS9PZFUxQWp0MTR0dHF3NWR2aDB4SWNuL2hLWThGb29wbWdoZmE5dEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWEJuYkpxdDNkTEhabWs3YUVnU2YwREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpFd09URTJNVFl5TWpNeVdoY05Nakl3T1RFMk1UWXlNak15V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNvKy9rWHlpUzF4RXcxeEVFYjU4ckFYemtMVEpCYjg2RHB3OE1EYWxaUApXUmw3SnZYcGFIUGNYaW5KMFBVTEtqeWRxLzhpQWxHdk1yUlhvd01Zd1dLSExzYnd0UEpvT2dxd3ZkdmE5NjR5ClJlUmRYNTVVNTFXdThKT29MUzFPNFA0V1lzcDJEYmpqaFk3TWFhYVpncUJ2NDIwazRSUXhkUGZQNDNROE9Idm8KRnY2eW5vQ2NZcDBweDlhWWNDYXE4MFJKVTllWnYzbVV4RHFMWWUzT0dZeDVqWlJZM0djSHBqSE8vUTZkRC9xawp2RXhyMVpSSW1DMXJha1l4VHJnb09zdU42Yk5yYTRpWml5aG56MEhuS3hJMmtVVG9IOVZieFd4emNtNDZ3YlQ1CjhFeFJCcXphUStpRUZ1SWN3WExVWkdmUXN6VjJCNkhMZW4zMmhSaFpVcXpEQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMnhpeHFHMEVxUTd4b0R6MEh5SE9xV3g5M0UKKytSdEhRdFNEblFhdDN4YVhtMmplZ1hZUTNwZzgyL1dwcnNpU1pzTlBsNkJNTmhUTHBXT1pWTWlXUjBwZHhmVgp6blBVcFVLMmlvdDBxY1JzcXR5RVM0bUNTN3l6UzlTY1R4UVU0dCsraTVHa2twT01sRGRMd3ArMXF6VkRTOVViCldlanZqQzNEQ1ppOERCQ3lTdUd6SXVGSEErRUlrbEMvdW8zaDV5WURMdXJYMlFiNHNTcVNRSFNWcGZRT1YxbE4KbzVsU3BIY3ZHMENVYlhEay9FRmpxSDF3MHB6TXZUYkpyUUR3d0Ywa2sxUTM0MWM0SCt1bnlkQ0xyUHZVRW5FegpXZndrSTYwSDBrQlJuT0dRU1M2UFNNaEh1dEJxYmZ5Y0g4THQvQ1hiQmplNU1wb1dsWEFyTWU4YzFRMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" , "UPDATE" ]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1"]
    resources: ["serverauthorizations", "servers"]
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: servers.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  names:
    kind: Server
    plural: servers
    singular: server
    shortNames: [srv]
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              required:
                - podSelector
                - port
              properties:
                podSelector:
                  type: object
                  description: >-
                    Selects pods in the same namespace.
                  oneOf:
                    - required: [matchExpressions]
                    - required: [matchLabels]
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                port:
                  description: >-
                    A port name or number. Must exist in a pod spec.
                  x-kubernetes-int-or-string: true
                proxyProtocol:
                  description: >-
                    Configures protocol discovery for inbound connections.

                    Supersedes the `config.linkerd.io/opaque-ports` annotation.
                  type: string
                  default: unknown
                  enum:
                    - unknown
                    - HTTP/1
                    - HTTP/2
                    - gRPC
                    - opaque
                    - TLS
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serverauthorizations.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  scope: Namespaced
  names:
    kind: ServerAuthorization
    plural: serverauthorizations
    singular: serverauthorization
    shortNames: [saz]
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              description: >-
                Authorizes clients to communicate with Linkerd-proxied servers.
              type: object
              required: [server, client]
              properties:
                server:
                  description: >-
                    Identifies servers in the same namespace for which this
                    authorization applies.

                    Only one of `name` or `selector` may be specified.
                  type: object
                  oneOf:
                    - required: [name]
                    - required: [selector]
                  properties:
                    name:
                      description: References a `Server` instance by name
                      type: string
                      pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                    selector:
                      description: >-
                        A label query over servers on which this authorization applies.
                      type: object
                      oneOf:
                        - required: [matchLabels]
                        - required: [matchExpressions]
                      properties:
                        matchLabels:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        matchExpressions:
                          type: array
                          items:
                            type: object
                            required: [key, operator]
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                                enum: [In, NotIn, Exists, DoesNotExist]
                              values:
                                type: array
                                items:
                                  type: string
                client:
                  description:  Describes clients authorized to access a server.
                  type: object
                  oneOf:
                    - required: [meshTLS]
                    - required: [unauthenticated]
                  properties:
                    networks:
                      description: >-
                        Limits the client IP addresses to which this
                        authorization applies. If unset, the server chooses a
                        default (typically, all IPs or the cluster's pod
                        network).
                      type: array
                      items:
                        type: object
                        required: [cidr]
                        properties:
                          cidr:
                            type: string
                          except:
                            type: array
                            items:
                              type: string
                    unauthenticated:
                      description: >-
                        Authorizes unauthenticated clients to access a server.
                      type: boolean
                    meshTLS:
                      type: object
                      oneOf:
                        - required: [unauthenticatedTLS]
                        - required: [identities]
                        - required: [serviceAccounts]
                      properties:
                        unauthenticatedTLS:
                          type: boolean
                          description: >-
                            Indicates that no client identity is required for
                            communication.

                            This is mostly important for the identity
                            controller, which must terminate TLS connections
                            from clients that do not yet have a certificate.
                        identities:
                          description: >-
                            Authorizes clients with the provided proxy identity
                            strings (as provided via MTLS)

                            The `*` prefix can be used to match all identities in
                            a domain. An identity string of `*` indicates that
                            all authentication clients are authorized.
                          type: array
                          items:
                            type: string
                            pattern: '^(\*|[a-z0-9]([-a-z0-9]*[a-z0-9])?)(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                        serviceAccounts:
                          description: >-
                            Authorizes clients with the provided proxy identity
                            service accounts (as provided via MTLS)
                          type: array
                          items:
                            type: object
                            required: [name]
                            properties:
                              name:
                                description: The ServiceAccount's name.
                                type: string
                                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                              namespace:
                                description: >-
                                  The ServiceAccount's namespace. If unset, the
                                  authorization's namespace is used.
                                type: string
                                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
---
###
### Service Profile CRD
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serviceprofiles.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: linkerd.io
  versions:
  - name: v1alpha1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: Spec is the custom resource spec
            required:
            - routes
            properties:
              dstOverrides:
                type: array
                required:
                - authority
                - weight
                items:
                  type: object
                  description: WeightedDst is a weighted alternate destination.
                  properties:
                    authority:
                      type: string
                    weight:
                      x-kubernetes-int-or-string: true
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              opaquePorts:
                type: array
                items:
                  type: string
              retryBudget:
                type: object
                required:
                - minRetriesPerSecond
                - retryRatio
                - ttl
                description: RetryBudget describes the maximum number of retries that should be issued to this service.
                properties:
                  minRetriesPerSecond:
                    format: int32
                    type: integer
                  retryRatio:
                    type: number
                    format: float
                  ttl:
                    type: string
              routes:
                type: array
                items:
                  type: object
                  description: RouteSpec specifies a Route resource.
                  required:
                  - condition
                  - name
                  properties:
                    condition:
                      type: object
                      description: RequestMatch describes the conditions under which to match a Route.
                      properties:
                        pathRegex:
                          type: string
                        method:
                          type: string
                        all:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        any:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        not:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                    isRetryable:
                      type: boolean
                    name:
                      type: string
                    timeout:
                      type: string
                    responseClasses:
                      type: array
                      items:
                        type: object
                        required:
                        - condition
                        description: ResponseClass describes how to classify a response (e.g. success or failures).
                        properties:
                          condition:
                            type: object
                            description: ResponseMatch describes the conditions under
                              which to classify a response.
                            properties:
                              all:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              any:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              not:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              status:
                                type: object
                                description: Range describes a range of integers (e.g. status codes).
                                properties:
                                  max:
                                    format: int32
                                    type: integer
                                  min:
                                    format: int32
                                    type: integer
                          isFailure:
                            type: boolean
  - name: v1alpha2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: Spec is the custom resource spec
            properties:
              dstOverrides:
                type: array
                required:
                - authority
                - weight
                items:
                  type: object
                  description: WeightedDst is a weighted alternate destination.
                  properties:
                    authority:
                      type: string
                    weight:
                      x-kubernetes-int-or-string: true
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              opaquePorts:
                type: array
                items:
                  type: string
              retryBudget:
                type: object
                required:
                - minRetriesPerSecond
                - retryRatio
                - ttl
                description: RetryBudget describes the maximum number of retries that should be issued to this service.
                properties:
                  minRetriesPerSecond:
                    format: int32
                    type: integer
                  retryRatio:
                    type: number
                    format: float
                  ttl:
                    type: string
              routes:
                type: array
                items:
                  type: object
                  description: RouteSpec specifies a Route resource.
                  required:
                  - condition
                  - name
                  properties:
                    condition:
                      type: object
                      description: RequestMatch describes the conditions under which to match a Route.
                      properties:
                        pathRegex:
                          type: string
                        method:
                          type: string
                        all:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        any:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        not:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                    isRetryable:
                      type: boolean
                    name:
                      type: string
                    timeout:
                      type: string
                    responseClasses:
                      type: array
                      items:
                        type: object
                        required:
                        - condition
                        description: ResponseClass describes how to classify a response (e.g. success or failures).
                        properties:
                          condition:
                            type: object
                            description: ResponseMatch describes the conditions under
                              which to classify a response.
                            properties:
                              all:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              any:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              not:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              status:
                                type: object
                                description: Range describes a range of integers (e.g. status codes).
                                properties:
                                  max:
                                    format: int32
                                    type: integer
                                  min:
                                    format: int32
                                    type: integer
                          isFailure:
                            type: boolean
  scope: Namespaced
  preserveUnknownFields: false
  names:
    plural: serviceprofiles
    singular: serviceprofile
    kind: ServiceProfile
    shortNames:
    - sp
---
###
### TrafficSplit CRD
### Copied from github.com/servicemeshinterface/smi-sdk-go/blob/d4e76b1cd7a33ead5f38d1262dd838a31c80f4e5/crds/split.yaml
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: trafficsplits.split.smi-spec.io
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: split.smi-spec.io
  scope: Namespaced
  conversion:
    strategy: None
  names:
    kind: TrafficSplit
    listKind: TrafficSplitList
    shortNames:
      - ts
    plural: trafficsplits
    singular: trafficsplit
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - backends
              properties:
                service:
                  description: The apex service of this split.
                  type: string
                backends:
                  description: The backend services of this split.
                  type: array
                  items:
                    type: object
                    required: ['service', 'weight']
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        x-kubernetes-int-or-string: true
      additionalPrinterColumns:
      - name: Service
        type: string
        description: The apex service of this split.
        jsonPath: .spec.service
    - name: v1alpha2
      served: true
      storage: false
      additionalPrinterColumns:
      - name: Service
        type: string
        description: The apex service of this split.
        jsonPath: .spec.service
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - backends
              properties:
                service:
                  description: The apex service of this split.
                  type: string
                backends:
                  description: The backend services of this split.
                  type: array
                  items:
                    type: object
                    required: ['service', 'weight']
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        type: number
  preserveUnknownFields: false
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRnZLcUZzME9yOXIwSlNBb2M2MGdTekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl4TURreE5qRTJNakl6TWxvWERUSXlNRGt4TmpFMk1qSXpNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMNlB4TE9HekRZWW1xMllLdWZmWE1MREdkUFNORFlMa3JEWUFlL0NFb1N0TUs1SworM0tiQXFVL1RIbFdQVGNWc1daZ2dNVUtNRW1oOUV4MlhWUmRadmorRC9yU1hERGYwcjhFaDQ0RFlnRzVMMHpOCnVPK0hHTmdVNG0yUFAxTElPL2NMWkJJSmJVYlMxR09YT1pEWVlrZUVtR2dKcWFsdXpmbEVLUU5BeHBFSEo3alIKcWRUMGdhK21hd3p6dXN6UktUUUxMRk5nM3J1SFpXZ09rYUNGREVHMzRuTGt3YU8xWE5UTWdOSU1zM0tTTnkwVwpoZkRhTEtIQ1RrVjUwekRJZTlwemQyc21ZQ0lqRVQwTTlBZ0tOMU04SlkyWFZ6eTJtbVFMaENZclFPRWw2aDRSClZObkJKVnBCOXJrL0VMKzhEa0pmSXBOemhERFMyNSs3WUduUTZKMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSjdoTE9yQTRvcjVhYWI1SHZ1dUhoSHkxVVdOUFFhZFRLeVgKSlZtQTJWby8zakhVNVZubmZIdmRRNUx0eEl3ckxxU09NcEdiVWRHZXV5cXV1bEZ3RUUvUTZ3WlhJYzVMUFllegpoWEpLbHVod2pvZjQrQVRWUUVnbXptekxxbmRQak1rRWw3MEovcFRDYXUrL2ZzV1BlTkNqSWJoTlh0MVJaVjNYCmVlL0hIckdLYlllbUlGeEJUZ0pDOE80enA4QnhwcldiQ29Cd2pZZ2Jqb3JIUWhkbnAzSU80SHZuQzQ5MldFK1YKcCt4K21XOE96aDdMUHMrUWxoUkNZMVBpMWZia2FuNlNjL2xvek5HMFNQS3NpN3VBeU11Q2RScGNTUXNzUmpjZAp0Q3o1OENjdExsMURSd1l3NzFkbStlZ1dKUUxrTnd5L1IxL0JpSERibGsyYjdGRVZheG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdm8vRXM0Yk1OaGlhclpncTU5OWN3c01aMDlJME5ndVNzTmdCNzhJU2hLMHdya3I3CmNwc0NwVDlNZVZZOU54V3habUNBeFFvd1NhSDBUSFpkVkYxbStQNFArdEpjTU4vU3Z3U0hqZ05pQWJrdlRNMjQKNzRjWTJCVGliWTgvVXNnNzl3dGtFZ2x0UnRMVVk1YzVrTmhpUjRTWWFBbXBxVzdOK1VRcEEwREdrUWNudU5HcAoxUFNCcjZackRQTzZ6TkVwTkFzc1UyRGV1NGRsYUE2Um9JVU1RYmZpY3VUQm83VmMxTXlBMGd5emNwSTNMUmFGCjhOb3NvY0pPUlhuVE1NaDcybk4zYXlaZ0lpTVJQUXowQ0FvM1V6d2xqWmRYUExhYVpBdUVKaXRBNFNYcUhoRlUKMmNFbFdrSDJ1VDhRdjd3T1FsOGlrM09FTU5MYm43dGdhZERvblFJREFRQUJBb0lCQUJqRlNYVm90VXptMzl4bQo1bFRqeFFRUUptQlJkN1g2eFNPMXdIS3hFSVVzbWlKZDN0ZWo3TEVjVEUyTmQwR2MwVVdVajhpTkxYKzB6TFBQCnd3di9aQzVEb0VJamJCWnlVY3ZBdy9vaTJHK082ZVlhNjhvL0RteXdNa3E1anlxc21wYmZaUyt2Q0FSbnpYSHcKcTJ2M3BMYlZOcFozZ3hWaU1PWVJCUi9HSU1taklnZVhwbVFFYjhZM2Z1d2pTemJneE5lUnVJQkRoeUZBb3RrTgpDbG9KdnZacWM3V2lhVGxNbjNGZXc4dDMxWTFVWXdVN2YyQi9ja3lOaEptd0pGeXh0OC95ZzdvZHJ2U2M1OE52Cm5nMHBJN3RUbTNBdUpyVlBNSmdySFVpbXFYTnhWLzM2djBMS3FZVytvOFpxMmoxSVNFSDJSVVdCZmJyWnk3dlgKNWpZd0EwVUNnWUVBMTY4bkM3ajIwYzV5S1BOR0d3ZFE5TkFxYXBVdXlJSzhod2YvRmZKUVo2UXhGMVJtYVhpNQpxZGM2TzRtNmdMYmUyRVZvdDA1MjZ0RGt6ZkZsNGdRcUhyN3BVTk1xYU5FMG9YT0taQ25NM3BHV2NnQytvUGltCkNwdXpESDhmbDZmSW1wVEFkQmFibUkydHo5ZXREY2dHMldseThtVnNzbE44Z0MrbXlrMDhiamNDZ1lFQTRpNTEKTityc2VYQkwzNnA4Sm9NOWNOOGd5dEdUekpNaGwyQVlDUkRNWGl3UzB5dUlKU2FoWjc2TW5iNTludG1TbXUxZgplakZRSnE0cGxhREdRcFlBMHVwZUJESnViUnJub2txdmdMcTIyQkQ0YUVlMmRURllwOWVldGptRFlRb3BUMi9BCk5UQWNyUGlSVjNEa2E1bHNmNFAwUEJZa3hlVHNuejRXWTBOOUZjc0NnWUVBcEZ4UGJ2bDI3WTliSTZXdnFPMDgKWGpNNy81akwyL1QwNGhuUDQ5T1NQa2k3T0VJVEFSRUV1MDdPaTR4N1daY0IzdUdWMlFxc1NHa0QwNFMvMVNyRApSa2JKMmRQeG40cTloc05ibE5UZDBFWTExWTZIdG5lRllOUWg3OFg0TjBPZTlWMmlBMVV2SVdQbUxscjIvMmVOCkFLVUErWU1kQUEvcThteGR1QkIvbXFVQ2dZRUF3NDFUUDFOWHZPOEFTcE1GMys1Y01yaFhpOE9ETzc2QnJuVWcKa3NYNVMvcGpGRHh3NjEzbzh0OW1pQVBvYkd6RU9qcTg3OUt1NzZKb3hidEpic3h1VGV6ZitGVDU4RTd3c2ZwTQpuc25QeUNOMEFnVHVsWWhpbEVyeUo2NjJEakpRNFNOSFZUVVJ0ZUw3RmxTK3lPRFBVN2hzYzM3WnNGZHExWXRDCm8vUDNzOTBDZ1lBRXNmM3ZydFZ1bzBUMS9lL3RTcTY5T3YvTGhMKzFubU9rUDNhanBLeVhHbmd6Yml6STNLVDEKUDB6WkxVSFRLMGtoS243Z0ZVY2JLOHR3SE91ZWNNT1dFdytZQnhhUnJHVWFWUFpsOXVZaG9MSXdDbXRhT0g5Nwp0RkYxajllaUdIbzlLQnRVWHVmejNKanJlcS9ybFFHN3dBeVB3ZHpGVjhBMDI3cGdmS3ZYT0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRnZLcUZzME9yOXIwSlNBb2M2MGdTekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl4TURreE5qRTJNakl6TWxvWERUSXlNRGt4TmpFMk1qSXpNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMNlB4TE9HekRZWW1xMllLdWZmWE1MREdkUFNORFlMa3JEWUFlL0NFb1N0TUs1SworM0tiQXFVL1RIbFdQVGNWc1daZ2dNVUtNRW1oOUV4MlhWUmRadmorRC9yU1hERGYwcjhFaDQ0RFlnRzVMMHpOCnVPK0hHTmdVNG0yUFAxTElPL2NMWkJJSmJVYlMxR09YT1pEWVlrZUVtR2dKcWFsdXpmbEVLUU5BeHBFSEo3alIKcWRUMGdhK21hd3p6dXN6UktUUUxMRk5nM3J1SFpXZ09rYUNGREVHMzRuTGt3YU8xWE5UTWdOSU1zM0tTTnkwVwpoZkRhTEtIQ1RrVjUwekRJZTlwemQyc21ZQ0lqRVQwTTlBZ0tOMU04SlkyWFZ6eTJtbVFMaENZclFPRWw2aDRSClZObkJKVnBCOXJrL0VMKzhEa0pmSXBOemhERFMyNSs3WUduUTZKMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSjdoTE9yQTRvcjVhYWI1SHZ1dUhoSHkxVVdOUFFhZFRLeVgKSlZtQTJWby8zakhVNVZubmZIdmRRNUx0eEl3ckxxU09NcEdiVWRHZXV5cXV1bEZ3RUUvUTZ3WlhJYzVMUFllegpoWEpLbHVod2pvZjQrQVRWUUVnbXptekxxbmRQak1rRWw3MEovcFRDYXUrL2ZzV1BlTkNqSWJoTlh0MVJaVjNYCmVlL0hIckdLYlllbUlGeEJUZ0pDOE80enA4QnhwcldiQ29Cd2pZZ2Jqb3JIUWhkbnAzSU80SHZuQzQ5MldFK1YKcCt4K21XOE96aDdMUHMrUWxoUkNZMVBpMWZia2FuNlNjL2xvek5HMFNQS3NpN3VBeU11Q2RScGNTUXNzUmpjZAp0Q3o1OENjdExsMURSd1l3NzFkbStlZ1dKUUxrTnd5L1IxL0JpSERibGsyYjdGRVZheG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
data:
  values: |
    cliVersion: linkerd/cli edge-21.9.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerImageVersion: edge-21.9.2
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: edge-21.9.2
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: false
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    grafanaUrl: ""
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        crtExpiry: "2022-09-16T16:22:41Z"
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMTA5MTYxNjIyMjFaFw0yMjA5MTYxNjIyNDFaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEgDZaJWrSgVyzhfC1YiMCFc4RNi1sT1IZVxzYRApFDShcP+D4+Y2Uz9Px6v5W
            VbZ5gcaRlh4s/YRqFApWPzpvvaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTdaSBiDZMxwhilBwJTdd+EDzuIhzAKBggqhkjOPQQDAgNIADBFAiAgABDUaI2w
            rL5Fyzjf0pQGB/odnvKmXb5O91k7L1vTEQIhAP6m4bGL6nWTKrTl5jr3l0qDChKP
            HVdgIoGVn1T3Xr4V
            -----END CERTIFICATE-----
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMTA5MTYxNjIyMjFaFw0yMjA5MTYxNjIyNDFaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEgDZaJWrSgVyzhfC1YiMCFc4RNi1sT1IZVxzYRApFDShcP+D4+Y2Uz9Px6v5W
      VbZ5gcaRlh4s/YRqFApWPzpvvaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTdaSBiDZMxwhilBwJTdd+EDzuIhzAKBggqhkjOPQQDAgNIADBFAiAgABDUaI2w
      rL5Fyzjf0pQGB/odnvKmXb5O91k7L1vTEQIhAP6m4bGL6nWTKrTl5jr3l0qDChKP
      HVdgIoGVn1T3Xr4V
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    installNamespace: true
    linkerdVersion: edge-21.9.2
    namespace: linkerd
    nodeSelector:
      beta.kubernetes.io/os: linux
    omitWebhookSideEffects: false
    podAnnotations: {}
    podLabels: {}
    policyController:
      defaultAllowPolicy: all-unauthenticated
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: linkerd=info,warn
      resources:
        cpu:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      keyPEM: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      await: true
      capabilities: null
      defaultInboundPolicy: ""
      disableIdentity: false
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: edge-21.9.2
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,443,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v1.4.0
      resources:
        cpu:
          limit: 100m
          request: 10m
        memory:
          limit: 50Mi
          request: 10Mi
      saMountPath: null
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
    linkerd.io/identity-issuer-expiry: 2022-09-16T16:22:41Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNVEE1TVRZeE5qSXlNakZhRncweU1qQTVNVFl4TmpJeU5ERmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVnRFphSldyU2dWeXpoZkMxWWlNQ0ZjNFJOaTFzVDFJWlZ4ellSQXBGRFNoY1ArRDQrWTJVejlQeDZ2NVcKVmJaNWdjYVJsaDRzL1lScUZBcFdQenB2dmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVGRhU0JpRFpNeHdoaWxCd0pUZGQrRUR6dUloekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUFnQUJEVWFJMncKckw1Rnl6amYwcFFHQi9vZG52S21YYjVPOTFrN0wxdlRFUUloQVA2bTRiR0w2bldUS3JUbDVqcjNsMHFEQ2hLUApIVmRnSW9HVm4xVDNYcjRWCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBMMWlYK2h3a3Q3Mi90WmRKcmFxQTcrcXB4cHR5RjcwU29UR3h1czR5SFNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZ0RaYUpXclNnVnl6aGZDMVlpTUNGYzRSTmkxc1QxSVpWeHpZUkFwRkRTaGNQK0Q0K1kyVQp6OVB4NnY1V1ZiWjVnY2FSbGg0cy9ZUnFGQXBXUHpwdnZRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMTA5MTYxNjIyMjFaFw0yMjA5MTYxNjIyNDFaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEgDZaJWrSgVyzhfC1YiMCFc4RNi1sT1IZVxzYRApFDShcP+D4+Y2Uz9Px6v5W
    VbZ5gcaRlh4s/YRqFApWPzpvvaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTdaSBiDZMxwhilBwJTdd+EDzuIhzAKBggqhkjOPQQDAgNIADBFAiAgABDUaI2w
    rL5Fyzjf0pQGB/odnvKmXb5O91k7L1vTEQIhAP6m4bGL6nWTKrTl5jr3l0qDChKP
    HVdgIoGVn1T3Xr4V
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-21.9.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-21.9.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: edge-21.9.2
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568,443"
        image: cr.l5d.io/linkerd/proxy-init:v1.4.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-21.9.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-21.9.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: edge-21.9.2
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
              - /usr/lib/linkerd/linkerd-await
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=false
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,443,587,3306,4444,5432,6379,9300,11211
        image: cr.l5d.io/linkerd/controller:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        image: cr.l5d.io/linkerd/controller:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --grpc-addr=0.0.0.0:8090
        - --admission-addr=0.0.0.0:9443
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        env:
        - name: RUST_LOG
          value: "linkerd=info,warn"
        image: cr.l5d.io/linkerd/policy-controller:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
        resources:
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568,443"
        image: cr.l5d.io/linkerd/proxy-init:v1.4.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-21.9.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
spec:
  concurrencyPolicy: Replace
  schedule: "32 16 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli edge-21.9.2
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:edge-21.9.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-21.9.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        checksum/config: cf497148abdc11eb0db659d7a0075464157f1ba9145166c30b3e99054a495574
        linkerd.io/created-by: linkerd/cli edge-21.9.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: edge-21.9.2
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
              - /usr/lib/linkerd/linkerd-await
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        image: cr.l5d.io/linkerd/controller:edge-21.9.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568,443"
        image: cr.l5d.io/linkerd/proxy-init:v1.4.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-21.9.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgY3J0RXhwaXJ5OiAiMjAyMi0wOS0xNlQxNjoyMjo0MVoiCiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU1UQTVNVFl4TmpJeU1qRmFGdzB5TWpBNU1UWXhOakl5TkRGYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUVnRFphSldyU2dWeXpoZkMxWWlNQ0ZjNFJOaTFzVDFJWlZ4ellSQXBGRFNoY1ArRDQrWTJVejlQeDZ2NVcKICAgICAgICBWYlo1Z2NhUmxoNHMvWVJxRkFwV1B6cHZ2YU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCVGRhU0JpRFpNeHdoaWxCd0pUZGQrRUR6dUloekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUFnQUJEVWFJMncKICAgICAgICByTDVGeXpqZjBwUUdCL29kbnZLbVhiNU85MWs3TDF2VEVRSWhBUDZtNGJHTDZuV1RLclRsNWpyM2wwcURDaEtQCiAgICAgICAgSFZkZ0lvR1ZuMVQzWHI0VgogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJUEwxaVgraHdrdDcyL3RaZEpyYXFBNytxcHhwdHlGNzBTb1RHeHVzNHlIU29Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRWdEWmFKV3JTZ1Z5emhmQzFZaU1DRmM0Uk5pMXNUMUlaVnh6WVJBcEZEU2hjUCtENCtZMlUKICAgICAgICB6OVB4NnY1V1ZiWjVnY2FSbGg0cy9ZUnFGQXBXUHpwdnZRPT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCmlkZW50aXR5VHJ1c3RBbmNob3JzUEVNOiB8CiAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgTUlJQmlEQ0NBUzZnQXdJQkFnSUJBVEFLQmdncWhrak9QUVFEQWpBY01Sb3dHQVlEVlFRREV4RnBaR1Z1ZEdsMAogIGVTNXNhVzVyWlhKa0xqQWVGdzB5TVRBNU1UWXhOakl5TWpGYUZ3MHlNakE1TVRZeE5qSXlOREZhTUJ3eEdqQVkKICBCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNECiAgUWdBRWdEWmFKV3JTZ1Z5emhmQzFZaU1DRmM0Uk5pMXNUMUlaVnh6WVJBcEZEU2hjUCtENCtZMlV6OVB4NnY1VwogIFZiWjVnY2FSbGg0cy9ZUnFGQXBXUHpwdnZhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNQjBHQTFVZEpRUVcKICBNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCiAgQkJUZGFTQmlEWk14d2hpbEJ3SlRkZCtFRHp1SWh6QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQWdBQkRVYUkydwogIHJMNUZ5empmMHBRR0Ivb2RudkttWGI1TzkxazdMMXZURVFJaEFQNm00YkdMNm5XVEtyVGw1anIzbDBxRENoS1AKICBIVmRnSW9HVm4xVDNYcjRWCiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
